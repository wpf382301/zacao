import numpy as np
import matplotlib.pyplot as plt
import matplotlib


def count_min(s):
    temp_unique, temp_count = np.unique(s, return_counts=True)
    # print("unique ", temp_unique)
    # print("count ", temp_count)
    temp_count_max = max(temp_count)
    temp_count_max_index = [i for i, j in enumerate(temp_count) if j == temp_count_max]
    # print("count_max index ", temp_count_max_index)
    temp_dict = {}
    for t_ in temp_count_max_index:
        temp_dict[str(temp_unique[t_])] = sum([i for i, j in enumerate(s) if j == temp_unique[t_]])
    # print(temp_dict)
    print(min(temp_dict.items(), key=lambda x: x[1])[0])


def ht1():
    x = []
    for i in range(0, 51):
        x.append(i * 200)
    y2 = [1.61, 0.33, 0.323, 0.316, 0.310, 0.304, 0.30, 0.293, 0.286, 0.28,
          0.275, 0.27, 0.26, 0.25, 0.24, 0.23, 0.23, 0.24, 0.23, 0.22,
          0.22, 0.225, 0.22, 0.21, 0.215, 0.21, 0.205, 0.20, 0.195, 0.18,
          0.17, 0.171, 0.172, 0.170, 0.16, 0.15, 0.15, 0.144, 0.14, 0.141,
          0.138, 0.136, 0.137, 0.135, 0.13, 0.125, 0.123, 0.121, 0.120, 0.121, 0.120]
    y3 = [1.64, 0.36, 0.353, 0.346, 0.341, 0.334, 0.328, 0.320, 0.314, 0.31,
          0.312, 0.3, 0.29, 0.28, 0.281, 0.278, 0.275, 0.271, 0.265, 0.26,
          0.25, 0.245, 0.243, 0.241, 0.239, 0.236, 0.233, 0.23, 0.225, 0.215,
          0.212, 0.21, 0.196, 0.193, 0.19, 0.187, 0.184, 0.183, 0.180, 0.176,
          0.173, 0.170, 0.167, 0.164, 0.161, 0.158, 0.157, 0.156, 0.155, 0.154, 0.154]
    y1 = [1.62, 0.35, 0.33, 0.328, 0.326, 0.318, 0.312, 0.305, 0.298, 0.29,
          0.293, 0.283, 0.276, 0.27, 0.262, 0.254, 0.246, 0.243, 0.236, 0.23,
          0.225, 0.225, 0.222, 0.22, 0.218, 0.215, 0.212, 0.22, 0.197, 0.182,
          0.182, 0.182, 0.183, 0.181, 0.165, 0.162, 0.162, 0.156, 0.151, 0.153,
          0.149, 0.146, 0.148, 0.146, 0.141, 0.136, 0.134, 0.132, 0.130, 0.131, 0.132]
    y4 = [1.58, 0.34, 0.333, 0.325, 0.322, 0.320, 0.318, 0.313, 0.308, 0.30,
          0.306, 0.29, 0.28, 0.27, 0.26, 0.25, 0.25, 0.25, 0.25, 0.245,
          0.23, 0.235, 0.23, 0.22, 0.225, 0.22, 0.215, 0.20, 0.205, 0.19,
          0.190, 0.189, 0.187, 0.185, 0.175, 0.172, 0.170, 0.165, 0.165, 0.160,
          0.158, 0.156, 0.157, 0.155, 0.15, 0.145, 0.143, 0.141, 0.140, 0.141, 0.141]
    plt.xlim(0, 10000)
    plt.ylim(0, 1.8)
    plt.plot(x, y3, 'gx-', label='3层卷积,256位特征码,无Hash Layer')
    plt.plot(x, y4, 'kx-', label='4层卷积,256位特征码,无Hash Layer')
    plt.plot(x, y1, 'bx-', label='3层卷积,256位特征码,128位Hash特征码')
    plt.plot(x, y2, 'rx-', label='4层卷积,256位特征码,128位Hash特征码')
    plt.xlabel('step')
    plt.ylabel('loss')
    plt.legend(loc='upper right')
    plt.show()


def ht2():
    print(matplotlib.matplotlib_fname())
    x = []
    for i in range(0, 51):
        x.append(i * 200)
    y1 = [0, 0.77, 0.83, 0.85, 0.86, 0.875, 0.875, 0.888, 0.892, 0.892,
          0.92, 0.92, 0.915, 0.918, 0.915, 0.917, 0.917, 0.918, 0.919, 0.919,
          0.918, 0.918, 0.921, 0.922, 0.924, 0.928, 0.931, 0.938, 0.939, 0.941,
          0.942, 0.943, 0.945, 0.955, 0.956, 0.958, 0.960, 0.959, 0.957, 0.956,
          0.953, 0.951, 0.954, 0.955, 0.955, 0.957, 0.955, 0.956, 0.953, 0.954, 0.956]
    y2 = [0, 0.85, 0.87, 0.875, 0.885, 0.895, 0.902, 0.908, 0.911, 0.915,
          0.931, 0.933, 0.936, 0.938, 0.945, 0.947, 0.947, 0.948, 0.949, 0.949,
          0.950, 0.952, 0.954, 0.957, 0.958, 0.959, 0.961, 0.962, 0.964, 0.966,
          0.968, 0.969, 0.970, 0.971, 0.970, 0.978, 0.976, 0.970, 0.970, 0.973,
          0.966, 0.965, 0.960, 0.972, 0.978, 0.971, 0.968, 0.970, 0.975, 0.978, 0.979]
    y3 = [0, 0.74, 0.79, 0.81, 0.83, 0.84, 0.84, 0.85, 0.85, 0.85,
          0.86, 0.865, 0.860, 0.862, 0.870, 0.875, 0.876, 0.879, 0.88, 0.881,
          0.883, 0.886, 0.89, 0.895, 0.886, 0.890, 0.895, 0.896, 0.898, 0.899,
          0.895, 0.899, 0.90, 0.905, 0.906, 0.908, 0.910, 0.910, 0.912, 0.912,
          0.913, 0.915, 0.916, 0.914, 0.912, 0.919, 0.918, 0.916, 0.915, 0.916, 0.915]
    y4 = [0, 0.78, 0.79, 0.83, 0.85, 0.871, 0.87, 0.885, 0.89, 0.89,
          0.90, 0.90, 0.91, 0.915, 0.910, 0.913, 0.912, 0.911, 0.910, 0.913,
          0.915, 0.918, 0.919, 0.919, 0.921, 0.926, 0.928, 0.931, 0.936, 0.938,
          0.939, 0.940, 0.940, 0.941, 0.940, 0.938, 0.936, 0.940, 0.940, 0.943,
          0.945, 0.950, 0.943, 0.939, 0.937, 0.939, 0.940, 0.942, 0.943, 0.941, 0.941]
    plt.xlim(0, 10000)
    plt.ylim(0, 1)
    plt.plot(x, y3, 'gx-', label='3层卷积,256位特征码,无Hash Layer')
    plt.plot(x, y4, 'kx-', label='4层卷积,256位特征码,无Hash Layer')
    plt.plot(x, y1, 'bx-', label='3层卷积,256位特征码,128位Hash特征码')
    plt.plot(x, y2, 'rx-', label='4层卷积,256位特征码,128位Hash特征码')
    plt.xlabel('step')
    plt.ylabel('accuracy')
    plt.legend(loc='lower right')
    plt.show()
    # plt.savefig('test.svg')


if __name__ == '__main__':
    ht1()
